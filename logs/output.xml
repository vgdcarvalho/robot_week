<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210212 20:52:49.251" rpa="false">
<suite id="s1" name="Tests" source="C:\Users\vgdcarvalho\Documents\Dev - pessoal\Robot\Parodify\tests">
<suite id="s1-s1" name="Login" source="C:\Users\vgdcarvalho\Documents\Dev - pessoal\Robot\Parodify\tests\login.robot">
<test id="s1-s1-t1" name="Login get text - New Page">
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210212 20:52:55.692" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:52:50.100" endtime="20210212 20:52:55.692"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>label[for=user_email]</arg>
<arg>contains</arg>
<arg>Email</arg>
</arguments>
<status status="PASS" starttime="20210212 20:52:55.693" endtime="20210212 20:52:55.738"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:52:56.126" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-106.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-106.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:52:55.738" endtime="20210212 20:52:56.126"></status>
</kw>
<status status="PASS" starttime="20210212 20:52:50.095" endtime="20210212 20:52:56.127" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Login get text - Open Browswer">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210212 20:52:56.178" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:52:56.180" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:52:56.674" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210212 20:52:56.675" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210212 20:52:56.685" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210212 20:53:00.024" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:52:56.178" endtime="20210212 20:53:00.024"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>label[for=user_email]</arg>
<arg>contains</arg>
<arg>Email</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:00.025" endtime="20210212 20:53:00.064"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:53:00.546" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-107.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-107.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:53:00.065" endtime="20210212 20:53:00.546"></status>
</kw>
<status status="PASS" starttime="20210212 20:52:56.170" endtime="20210212 20:53:00.547" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Login com sucesso - Open Browser">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210212 20:53:00.651" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:00.652" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:53:01.080" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210212 20:53:01.081" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210212 20:53:01.097" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210212 20:53:04.379" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:53:00.650" endtime="20210212 20:53:04.379"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>papito@parodify.com</arg>
</arguments>
<msg timestamp="20210212 20:53:04.381" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:04.380" endtime="20210212 20:53:04.438"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>pwd123</arg>
</arguments>
<msg timestamp="20210212 20:53:04.439" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:04.439" endtime="20210212 20:53:04.460"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:04.461" endtime="20210212 20:53:05.207"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>a[href$=sign_out]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210212 20:53:05.532" level="INFO">Wait for Element with selector: a[href$=sign_out]</msg>
<status status="PASS" starttime="20210212 20:53:05.208" endtime="20210212 20:53:05.533"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:53:05.890" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-108.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-108.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:53:05.534" endtime="20210212 20:53:05.890"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:00.644" endtime="20210212 20:53:05.891" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Login com sucesso - New Page">
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210212 20:53:12.055" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:53:05.991" endtime="20210212 20:53:12.055"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>papito@parodify.com</arg>
</arguments>
<msg timestamp="20210212 20:53:12.057" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:12.056" endtime="20210212 20:53:12.107"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>pwd123</arg>
</arguments>
<msg timestamp="20210212 20:53:12.109" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:12.108" endtime="20210212 20:53:12.131"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:12.132" endtime="20210212 20:53:12.784"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>a[href$=sign_out]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210212 20:53:13.129" level="INFO">Wait for Element with selector: a[href$=sign_out]</msg>
<status status="PASS" starttime="20210212 20:53:12.785" endtime="20210212 20:53:13.130"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:53:13.492" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-109.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-109.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:53:13.132" endtime="20210212 20:53:13.492"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:05.986" endtime="20210212 20:53:13.493" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Login incorreto">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210212 20:53:13.581" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:13.583" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:53:14.226" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210212 20:53:14.228" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210212 20:53:14.268" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210212 20:53:17.771" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:53:13.581" endtime="20210212 20:53:17.771"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>papito@parodify.com</arg>
</arguments>
<msg timestamp="20210212 20:53:17.773" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:17.772" endtime="20210212 20:53:17.840"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>123456</arg>
</arguments>
<msg timestamp="20210212 20:53:17.841" level="INFO">Fills the text '123456' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:17.840" endtime="20210212 20:53:17.872"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:17.872" endtime="20210212 20:53:18.538"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:18.539" endtime="20210212 20:53:18.846"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:53:19.455" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-110.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-110.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:53:18.847" endtime="20210212 20:53:19.456"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:13.570" endtime="20210212 20:53:19.456" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Email incorreto">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210212 20:53:19.576" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:19.578" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:53:20.178" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210212 20:53:20.180" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210212 20:53:20.203" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210212 20:53:23.567" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:53:19.575" endtime="20210212 20:53:23.567"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>test@test.com</arg>
</arguments>
<msg timestamp="20210212 20:53:23.569" level="INFO">Fills the text 'test@test.com' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:23.568" endtime="20210212 20:53:23.625"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>123456</arg>
</arguments>
<msg timestamp="20210212 20:53:23.627" level="INFO">Fills the text '123456' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:23.626" endtime="20210212 20:53:23.649"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:23.650" endtime="20210212 20:53:24.204"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:24.204" endtime="20210212 20:53:24.533"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:53:25.136" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-111.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-111.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:53:24.534" endtime="20210212 20:53:25.136"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:19.570" endtime="20210212 20:53:25.136" critical="yes"></status>
</test>
<test id="s1-s1-t7" name="Email não informado">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210212 20:53:25.298" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:25.300" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:53:26.050" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210212 20:53:26.052" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210212 20:53:26.081" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210212 20:53:29.542" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:53:25.296" endtime="20210212 20:53:29.542"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20210212 20:53:29.544" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:29.543" endtime="20210212 20:53:29.589"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>123456</arg>
</arguments>
<msg timestamp="20210212 20:53:29.590" level="INFO">Fills the text '123456' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:29.590" endtime="20210212 20:53:29.634"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:29.634" endtime="20210212 20:53:30.149"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:30.149" endtime="20210212 20:53:30.490"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:53:31.105" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-112.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-112.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:53:30.491" endtime="20210212 20:53:31.106"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:25.288" endtime="20210212 20:53:31.107" critical="yes"></status>
</test>
<test id="s1-s1-t8" name="Senha não informada">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210212 20:53:31.270" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:31.275" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:53:31.927" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210212 20:53:31.928" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210212 20:53:31.942" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210212 20:53:35.336" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:53:31.269" endtime="20210212 20:53:35.336"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>papito@parodify.com</arg>
</arguments>
<msg timestamp="20210212 20:53:35.337" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:35.337" endtime="20210212 20:53:35.398"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20210212 20:53:35.400" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:35.399" endtime="20210212 20:53:35.427"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:35.428" endtime="20210212 20:53:35.826"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:35.826" endtime="20210212 20:53:36.153"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:53:36.774" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-113.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-113.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:53:36.155" endtime="20210212 20:53:36.775"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:31.261" endtime="20210212 20:53:36.775" critical="yes"></status>
</test>
<test id="s1-s1-t9" name="Email e senha não informados">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210212 20:53:36.965" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:36.970" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:53:37.626" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210212 20:53:37.627" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210212 20:53:37.666" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210212 20:53:41.462" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:53:36.964" endtime="20210212 20:53:41.463"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20210212 20:53:41.464" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:41.464" endtime="20210212 20:53:41.502"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20210212 20:53:41.503" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:41.503" endtime="20210212 20:53:41.526"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:41.527" endtime="20210212 20:53:41.965"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:41.966" endtime="20210212 20:53:42.290"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:53:42.958" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-114.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-114.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:53:42.292" endtime="20210212 20:53:42.958"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:36.956" endtime="20210212 20:53:42.959" critical="yes"></status>
</test>
<test id="s1-s1-t10" name="Login com sucesso - New Keyword">
<kw name="Open Login Page" library="login">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>true</arg>
</arguments>
<msg timestamp="20210212 20:53:43.095" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:53:43.621" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210212 20:53:43.094" endtime="20210212 20:53:43.622"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210212 20:53:46.167" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:53:43.622" endtime="20210212 20:53:46.168"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:43.092" endtime="20210212 20:53:46.168"></status>
</kw>
<kw name="Login With" library="login">
<arguments>
<arg>papito@parodify.com</arg>
<arg>pwd123</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210212 20:53:46.170" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:46.169" endtime="20210212 20:53:46.246"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>${pass_arg}</arg>
</arguments>
<msg timestamp="20210212 20:53:46.247" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:46.246" endtime="20210212 20:53:46.266"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:46.267" endtime="20210212 20:53:47.082"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:46.169" endtime="20210212 20:53:47.082"></status>
</kw>
<kw name="Logout Button Should be visible" library="home">
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>${logout_btn}</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210212 20:53:47.412" level="INFO">Wait for Element with selector: css=a[href$=sign_out]</msg>
<status status="PASS" starttime="20210212 20:53:47.083" endtime="20210212 20:53:47.413"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:47.083" endtime="20210212 20:53:47.413"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:53:47.748" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-115.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-115.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:53:47.414" endtime="20210212 20:53:47.748"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20210212 20:53:43.082" endtime="20210212 20:53:47.749" critical="yes"></status>
</test>
<test id="s1-s1-t11" name="Login incorreto - New Keyword">
<kw name="Open Login Page" library="login">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>true</arg>
</arguments>
<msg timestamp="20210212 20:53:47.812" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:53:48.338" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210212 20:53:47.812" endtime="20210212 20:53:48.339"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210212 20:53:51.013" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:53:48.339" endtime="20210212 20:53:51.013"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:47.811" endtime="20210212 20:53:51.014"></status>
</kw>
<kw name="Login With" library="login">
<arguments>
<arg>papito@parodify.com</arg>
<arg>123456</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210212 20:53:51.017" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:51.016" endtime="20210212 20:53:51.108"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>${pass_arg}</arg>
</arguments>
<msg timestamp="20210212 20:53:51.108" level="INFO">Fills the text '123456' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:51.108" endtime="20210212 20:53:51.129"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:51.129" endtime="20210212 20:53:51.807"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:51.015" endtime="20210212 20:53:51.807"></status>
</kw>
<kw name="Alert Should Be" library="login">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>${alert_arg}</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:51.809" endtime="20210212 20:53:52.113"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:51.808" endtime="20210212 20:53:52.113"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:53:52.577" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-116.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-116.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:53:52.114" endtime="20210212 20:53:52.577"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:47.802" endtime="20210212 20:53:52.577" critical="yes"></status>
</test>
<test id="s1-s1-t12" name="Email incorreto - New Keyword">
<kw name="Open Login Page" library="login">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>true</arg>
</arguments>
<msg timestamp="20210212 20:53:52.629" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:53:53.062" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210212 20:53:52.628" endtime="20210212 20:53:53.063"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210212 20:53:55.473" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:53:53.064" endtime="20210212 20:53:55.473"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:52.628" endtime="20210212 20:53:55.473"></status>
</kw>
<kw name="Login With" library="login">
<arguments>
<arg>test@test.com</arg>
<arg>123456</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210212 20:53:55.475" level="INFO">Fills the text 'test@test.com' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:55.474" endtime="20210212 20:53:55.558"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>${pass_arg}</arg>
</arguments>
<msg timestamp="20210212 20:53:55.559" level="INFO">Fills the text '123456' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:55.558" endtime="20210212 20:53:55.576"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:55.577" endtime="20210212 20:53:56.066"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:55.474" endtime="20210212 20:53:56.067"></status>
</kw>
<kw name="Alert Should Be" library="login">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>${alert_arg}</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:56.068" endtime="20210212 20:53:56.351"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:56.067" endtime="20210212 20:53:56.352"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:53:56.785" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-117.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-117.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:53:56.353" endtime="20210212 20:53:56.786"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:52.622" endtime="20210212 20:53:56.786" critical="yes"></status>
</test>
<test id="s1-s1-t13" name="Email não informado - New Keyword">
<kw name="Open Login Page" library="login">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>true</arg>
</arguments>
<msg timestamp="20210212 20:53:56.840" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:53:57.242" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210212 20:53:56.840" endtime="20210212 20:53:57.244"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210212 20:53:59.751" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:53:57.244" endtime="20210212 20:53:59.752"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:56.839" endtime="20210212 20:53:59.752"></status>
</kw>
<kw name="Login With" library="login">
<arguments>
<arg>${EMPTY}</arg>
<arg>123456</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210212 20:53:59.754" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:59.753" endtime="20210212 20:53:59.797"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>${pass_arg}</arg>
</arguments>
<msg timestamp="20210212 20:53:59.798" level="INFO">Fills the text '123456' in the given field.</msg>
<status status="PASS" starttime="20210212 20:53:59.798" endtime="20210212 20:53:59.832"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:53:59.832" endtime="20210212 20:54:00.326"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:59.753" endtime="20210212 20:54:00.327"></status>
</kw>
<kw name="Alert Should Be" library="login">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>${alert_arg}</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:00.328" endtime="20210212 20:54:00.595"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:00.327" endtime="20210212 20:54:00.595"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:54:01.041" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-118.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-118.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:54:00.596" endtime="20210212 20:54:01.041"></status>
</kw>
<status status="PASS" starttime="20210212 20:53:56.834" endtime="20210212 20:54:01.043" critical="yes"></status>
</test>
<test id="s1-s1-t14" name="Senha não informada - New Keyword">
<kw name="Open Login Page" library="login">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>true</arg>
</arguments>
<msg timestamp="20210212 20:54:01.096" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:54:01.577" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210212 20:54:01.096" endtime="20210212 20:54:01.578"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210212 20:54:03.983" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:54:01.578" endtime="20210212 20:54:03.984"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:01.095" endtime="20210212 20:54:03.984"></status>
</kw>
<kw name="Login With" library="login">
<arguments>
<arg>papito@parodify.com</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210212 20:54:03.986" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210212 20:54:03.986" endtime="20210212 20:54:04.056"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>${pass_arg}</arg>
</arguments>
<msg timestamp="20210212 20:54:04.057" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210212 20:54:04.056" endtime="20210212 20:54:04.076"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:04.076" endtime="20210212 20:54:04.387"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:03.985" endtime="20210212 20:54:04.388"></status>
</kw>
<kw name="Alert Should Be" library="login">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>${alert_arg}</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:04.389" endtime="20210212 20:54:04.669"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:04.388" endtime="20210212 20:54:04.669"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:54:05.116" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-119.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-119.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:54:04.670" endtime="20210212 20:54:05.116"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:01.086" endtime="20210212 20:54:05.117" critical="yes"></status>
</test>
<test id="s1-s1-t15" name="Email e senha não informados - New Keyword">
<kw name="Open Login Page" library="login">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>true</arg>
</arguments>
<msg timestamp="20210212 20:54:05.174" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:54:05.646" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210212 20:54:05.173" endtime="20210212 20:54:05.646"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210212 20:54:07.862" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:54:05.647" endtime="20210212 20:54:07.863"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:05.172" endtime="20210212 20:54:07.863"></status>
</kw>
<kw name="Login With" library="login">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210212 20:54:07.867" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210212 20:54:07.866" endtime="20210212 20:54:07.904"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>${pass_arg}</arg>
</arguments>
<msg timestamp="20210212 20:54:07.904" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210212 20:54:07.904" endtime="20210212 20:54:07.923"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:07.923" endtime="20210212 20:54:08.262"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:07.865" endtime="20210212 20:54:08.262"></status>
</kw>
<kw name="Alert Should Be" library="login">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>${alert_arg}</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:08.263" endtime="20210212 20:54:08.573"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:08.263" endtime="20210212 20:54:08.574"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:54:09.041" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-120.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-120.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:54:08.575" endtime="20210212 20:54:09.041"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:05.163" endtime="20210212 20:54:09.042" critical="yes"></status>
</test>
<doc>Testes da página login</doc>
<status status="PASS" starttime="20210212 20:52:49.281" endtime="20210212 20:54:09.097"></status>
</suite>
<suite id="s1-s2" name="Play" source="C:\Users\vgdcarvalho\Documents\Dev - pessoal\Robot\Parodify\tests\play.robot">
<test id="s1-s2-t1" name="Reproduzir paródia Bug de Manhã">
<kw name="Login" library="login" type="setup">
<kw name="Open Login Page" library="login">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>chromium</arg>
<arg>true</arg>
</arguments>
<msg timestamp="20210212 20:54:09.137" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210212 20:54:09.560" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210212 20:54:09.137" endtime="20210212 20:54:09.561"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210212 20:54:11.852" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210212 20:54:09.561" endtime="20210212 20:54:11.852"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:09.136" endtime="20210212 20:54:11.852"></status>
</kw>
<kw name="Login With" library="login">
<arguments>
<arg>papito@parodify.com</arg>
<arg>pwd123</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210212 20:54:11.853" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210212 20:54:11.853" endtime="20210212 20:54:11.930"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>id=user_password</arg>
<arg>${pass_arg}</arg>
</arguments>
<msg timestamp="20210212 20:54:11.931" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210212 20:54:11.931" endtime="20210212 20:54:11.951"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:11.951" endtime="20210212 20:54:12.621"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:11.852" endtime="20210212 20:54:12.622"></status>
</kw>
<kw name="Logout Button Should be visible" library="home">
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>${logout_btn}</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210212 20:54:12.913" level="INFO">Wait for Element with selector: css=a[href$=sign_out]</msg>
<status status="PASS" starttime="20210212 20:54:12.623" endtime="20210212 20:54:12.914"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:12.622" endtime="20210212 20:54:12.914"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:09.136" endtime="20210212 20:54:12.914"></status>
</kw>
<kw name="Go to Search Page" library="home">
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=a[href*=search]</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:12.916" endtime="20210212 20:54:12.952"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=h2</arg>
<arg>equal</arg>
<arg>Buscar</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:12.952" endtime="20210212 20:54:13.346"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:12.915" endtime="20210212 20:54:13.347"></status>
</kw>
<kw name="Go to Category" library="search">
<arguments>
<arg>Sertanejo</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//img[contains(@src, "sertanejo.png")]/..</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:13.348" endtime="20210212 20:54:13.904"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=h2</arg>
<arg>equal</arg>
<arg>${category}</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:13.905" endtime="20210212 20:54:14.304"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:13.347" endtime="20210212 20:54:14.304"></status>
</kw>
<kw name="Go to Artist Album" library="category">
<arguments>
<arg>Marcus e Debug</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//p[contains(text(), "${artist}")]/..</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:14.305" endtime="20210212 20:54:14.350"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "Músicas")]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210212 20:54:14.795" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(), "Músicas")]</msg>
<status status="PASS" starttime="20210212 20:54:14.350" endtime="20210212 20:54:14.796"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:14.304" endtime="20210212 20:54:14.797"></status>
</kw>
<kw name="Play Song" library="album">
<arguments>
<arg>Bug de Manhã</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "${song}")]/../..//a</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:14.799" endtime="20210212 20:54:14.898"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=h2</arg>
<arg>equal</arg>
<arg>Músicas</arg>
</arguments>
<status status="PASS" starttime="20210212 20:54:14.898" endtime="20210212 20:54:14.923"></status>
</kw>
<status status="PASS" starttime="20210212 20:54:14.798" endtime="20210212 20:54:14.924"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210212 20:54:24.929" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210212 20:54:14.925" endtime="20210212 20:54:24.929"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210212 20:54:25.237" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-121.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-121.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210212 20:54:24.931" endtime="20210212 20:54:25.238"></status>
</kw>
<tags>
<tag>play</tag>
</tags>
<status status="PASS" starttime="20210212 20:54:09.128" endtime="20210212 20:54:25.238" critical="yes"></status>
</test>
<doc>Testando reprodução de paródias</doc>
<status status="PASS" starttime="20210212 20:54:09.111" endtime="20210212 20:54:25.292"></status>
</suite>
<status status="PASS" starttime="20210212 20:52:49.253" endtime="20210212 20:54:25.305"></status>
</suite>
<statistics>
<total>
<stat pass="16" fail="0">Critical Tests</stat>
<stat pass="16" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">play</stat>
<stat pass="1" fail="0">smoke</stat>
</tag>
<suite>
<stat pass="16" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="15" fail="0" id="s1-s1" name="Login">Tests.Login</stat>
<stat pass="1" fail="0" id="s1-s2" name="Play">Tests.Play</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210212 20:52:56.178" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:00.651" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:13.581" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:19.576" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:25.298" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:31.270" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210212 20:53:36.965" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
</errors>
</robot>
